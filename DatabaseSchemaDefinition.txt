
-- CREATE SCHEMA SHIPPING;
SET SEARCH_PATH = PUBLIC, PG_CATALOG;

-- Create SEQUENCE tables for ROUTE and LEG.
create sequence
    route_number_sequence
        minvalue 0 maxvalue 2147483647;
create sequence
     leg_number_sequence
         minvalue 0 maxvalue 2147483647;

-- CREATE THE LOCATION ENTITY.
CREATE TABLE LOCATION
    (   LOCATION_CODE       INTEGER           NOT NULL,
        LOCATION_TYPE_CODE  CHAR(5)           NOT NULL,
        NAME                CHAR VARYING(80)  NOT NULL,
        FORMAT              CHAR VARYING(20),
        COUNTY              CHAR VARYING(40),
        POSTCODE            CHAR VARYING(10),
        COUNTRY             CHAR VARYING(40),
        REPORTING_REGION    CHAR VARYING(20),
        PRIMARY KEY (LOCATION_CODE)
    );

ALTER TABLE LOCATION
    OWNER TO POSTGRES;

-- CREATE THE ROUTE ENTITY.
CREATE TABLE ROUTE
    (   ROUTE_NUMBER            INTEGER      NOT NULL,
        ROUTE_TYPE_CODE         CHAR(5)      NOT NULL,
        LOCATION_CODE_START     INTEGER      NOT NULL,
        LOCATION_CODE_END       INTEGER      NOT NULL,
        START_DATE              DATE         NOT NULL,
        END_DATE                DATE         NOT NULL,
        PRIMARY KEY (ROUTE_NUMBER),
        FOREIGN KEY (LOCATION_CODE_START) REFERENCES LOCATION (LOCATION_CODE),
        FOREIGN KEY (LOCATION_CODE_END)   REFERENCES LOCATION (LOCATION_CODE)
    );

ALTER TABLE ROUTE
    OWNER TO POSTGRES;

CREATE UNIQUE INDEX ROUTE_LOCATIONS_START_DATE_SK ON ROUTE
    (   LOCATION_CODE_START,
        LOCATION_CODE_END,
        START_DATE
    );

-- CREATE THE ROUTE_LEG ENTITY.
CREATE TABLE ROUTE_LEG
    (   LEG_NUMBER               INTEGER     NOT NULL,
        ROUTE_NUMBER             INTEGER     NOT NULL,
        LOCATION_CODE_FROM       INTEGER     NOT NULL,
        LOCATION_CODE_TO         INTEGER     NOT NULL,
        PRIMARY KEY (LEG_NUMBER),
        FOREIGN KEY (ROUTE_NUMBER) REFERENCES ROUTE (ROUTE_NUMBER) ON DELETE CASCADE,
        FOREIGN KEY (LOCATION_CODE_FROM) REFERENCES LOCATION (LOCATION_CODE),
        FOREIGN KEY (LOCATION_CODE_TO) REFERENCES LOCATION (LOCATION_CODE)
    );

ALTER TABLE ROUTE_LEG
    OWNER TO POSTGRES;

CREATE UNIQUE INDEX ROUTE_LEG_SK ON ROUTE_LEG
    (ROUTE_NUMBER,
     LEG_NUMBER);

create or replace view route_path_view
( route_number
, route_type_code
, location_code_start
, location_code_end
, start_date
, end_date
, leg_number
, location_code_from
, location_from_name
, location_from_type_code
, location_from_format
, location_code_to
, location_to_name
, location_to_type_code
, location_to_format
)
as
    select l.route_number
        , r.route_type_code
        , r.location_code_start
        , r.location_code_end
        , r.start_date
        , r.end_date
        , rl.leg_number
        , rl.location_code_from
        , lf.name
        , lf.location_type_code
        , lf.format
        , rl.location_code_to
        , lt.name
        , lt.location_type_code
        , lt.format
     from route r
        , route_leg rl
        , location lf
        , location lt
    where rl.route_number        = r.route_number
      and lf.location_code       = rl.location_code_from
      and lt.location_code       = rl.location_code_to
    order by rl.leg_number
      ;

      ALTER VIEW route_path_view
          OWNER TO POSTGRES;

